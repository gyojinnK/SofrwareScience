[ 계획 ]
[ 문제 정의 ]
[ 타당성 분석 ]
  경제적 타당성
    - 시장성, 투자 효율성 확인
  기술적 타당성
    - 사용자가 요구하는 프로젝트가 최신 기술이 필요하다면 기술적 타당성을 먼저 검토
  법적 타당성
    - 오픈소스는 개발에서 분쟁 발생 소지가 높음
    - 오픈소스는 비용 절감에 효율적
    - 라이선스 확인 필수
    
[ 개발 비용 산정의 어려움 ]
  조립 컴퓨터 가격, 전자 제품 가격, 건축비 등은 어느 정도 근거가 명확해 소비자도 인정하기가 쉬움
  소프트웨어 가격은 근거를 명확히 제시하기 어려우니 사용자도 받아들이기가 쉽지 않음
  개발 프로세스가 다양하기 때문에 표준화나 자동화가 어려워 개발 프로세스에 따라 생산성이나 품질이 서로 다를 수 있음

[ 개발 비용애 영향을 주는 요소 ]
  프로그래머 자질
  스프트웨어 크기
  가용시간
  요구되는 신뢰도 수준
  기술 수준
  
[ 비용 산정 기법 : 하향식 ]
  전문가 판단 기법
    - 
  델파이 기법
    - 전문가들이 모여 의견 조율
    
[ 비용 산정 기법 : 상향식 ]
    윈시 코드 라인 수기법 - LOC 기법
      - 낙관치 : 한 모듈의 라인 수를 가장 적게 생각할 때의 예상 라인 수(가중치 1 부여)
      - 비관치 : 한 모듈의 라인 수를 가장 많게 생각할 때의 예상 라인 수(가중치 1 부여)
      - 중간치 : 한 모듈의 라인 수를 보통이라고 생각할 때의 예상 라인 수(가중치 4 부여)
      - 추정 LOC : (낙관치 + (4 X 중간치) + 비관치)/6
    
    LOC기법의 비용 산정 공식
      - 노력(인/월수) = (참여 인원/월) X 개발기간 = 추청 LOC/1인당 월평균 생산 코드 라인 수
      - 개발 비용 = (M/M) X 단위비용(1인당 월평균 인건비)
      - 개발 기간 = (M/M)/참여 인원
      - 생산성 = LOC/(M/M)
      
    개발 단계 노력(M/M) 기법
      - LOC 기법은 개발하려는 소프트웨어의 총 코드 라인 수를 예측하여 구련 단계에 대한 M/M를 산정
    
[ COCOMO 방법 ]
  가중치 반영하기
    - 단순형 프로젝트 : 복잡도와 난이도가 비교적 높지 않은 업무용 소프트웨어
    - 중간형 프로젝트 : 규모나 복잡도가 중간 정도
    - 내장형(임베디드) 프로젝트 : 자동화 기기나 전자 제품과 같은 하드웨어와 밀접하게 관련있는 내장형 소프트웨어
    
  개발 인건비 초기 예측
    - COCOMO 방법에서 제시하는 공식을 사용하면 개발 인건비M/M의 초기 예측 값을 계산
    - 규모가 같은 소프트웨어일 경우 기본형보다는 중간형에서, 중간형보다는 냐장형에서 M/M가 더 많이 필요
    
  보정 계수 반영하기
    - 노력 조정 수치(EAF) : 보정에 사용하는 값, 필요한 각 항목별 승수 값을 모두 곱한 값
    - 15개의 세부 항목에 따른 보정 값을 모두 정해 놓음
    
  노력 조정 수치가 반영된 노력(P/M)
    - 노력 조정 수치가 반영된 노력(P/M) : 프로젝트 유형에 노력 조정 수치(EAF)를 곱한 것
    
  총 개발 기간 산정하기
    - 보엠이 제시하는 총 개발 기간을 계산할 때는 개발할 소프트웨어 유형에 상관없이 모두 동일한 상수(2.5) 값을 곱함
    - 개발 기간은 소프트웨어 유형과 상관없음

[ 기능 점수 산정 방법 ]
  방법 
    - 기능 점수의 기준이 되는 소프트웨어 기능은 크게 데이터 기능과 트랜잭션으로 구분
    - SW사업 대가산정 가이드에서 제시하는 기능 점수 산정 방법 구분
    
[ 간이 기능 점수법 ]
  - 프로젝트 초기 단계에서 각 기근의 요소를 모르는 경우에 평균 복잡도 가중치를 시용해 소프트웨어 기능의 크기르 측정
  - 평균 복잡도 가중치

[ 간이 기능 점수법을 이용한 기능 전숨 산정 방법 ]
  - 개발 프로젝트 기능 점수(개발 규모 측정)
  - 개선 프로젝트 기능 점수(변경 규모 측정)
  - 애플리케이션 기능 점수(응용 규모 측정)
 
  측정 법위와 애플리케이션 경계 설정
 
[ 기능 점수 기반 추정 모델 ]
  - 가중치 반영 기능 점수 도출(가중치 단순일 경우)
  
[ 일정 계획 ]
  간이 기능 점수법을 이용한 기능 점수 산정 방법
    -  일정 계획의 이해
    
[ WBS ]
  - 작업 분할 구조도
  - 프로젝트 목표 달성을 위해 활동을 세분화하는 작업
  - 작업 패키지 : 활동을 작게 나눔
  - 장점 : 팀원 책임과 역할 분명, 계획을 세우는 것에 기초로 활용
  
[ 네트워크 차트 ]
  PERT
    - 프로그램을 평가, 검토하고 프로젝트 관리 기법
  CPM
    - 단위 작업ㅇ이 확정적 소요 시간을 갖는 프로젝트인 경우 적합
    - CPM으로 네트워크를 그리려면 학사관리 애플리케이션을 수행하는 데 필요한 작업, 선행 작업, 작업 소요 기간 필요
    - CPM 작업 과정
      -> ES값을 구함
        ES : 가능한 빨리 시작할 수 있는 시간, 선행 작업이 완료 되었을 때 해당 작업을 시작할 수 있는 가장 빠른 시점
        EF : 가장 빠른 시작 시간(ES)으로 시작했을 때의 가장 빠른 완료 시간(ES + 쟉업 소요 시간)
        LS : 어떤 작업을 늦어도 시작해야 하는 시간, 가장 늦게 시작할 수 있는 시간
        LF : 가장 늦게 시작할 수 있는 시간(LF)에 시작해서 작업을 완료한 시간(LS + 작업 소요시간)
        ST : 여유시간, 각 작업에서 (가장 늦게 시작하는 시간 - 가장 빨리 시작하는 시간)
        임계 경로 : 여유시간이 없는 경로
        
[ 간트차트 ] 
  - 프로젝트 일정관리를 위한 바 형태의 도구
  - 전체 일정을 한눈에 볼 수 있음
  
  
      
